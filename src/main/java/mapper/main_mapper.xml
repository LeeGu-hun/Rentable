<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mainSQL">
	<!-- 이름이 다를 경우 사용 한다 -->
	<!-- <resultMap type="member" id="member"> <result property="name" column="name"/> 
		<result property="email" column="email"/> <result property="password" column="password"/> 
		<result property="regdate" column="regdate"/> </resultMap> -->
	<select id="maincate" resultType="bean.Bean_Category">
		select * from rent_maincate
	</select>

	<select id="subcate" resultType="bean.bean_rent_products">
		select (CASE WHEN
		COUNT(rp_catesub) is null THEN 0 ELSE count(RP_catesub)
		END) as
		RP_subCount,
		rp_catesub from rent_products where
		rp_catemain=#{RP_catemain} and
		round((rp_enddate - sysdate),0) > 0
		group by
		rp_catesub
	</select>



	<select id="getmaincateitems" resultType="bean.bean_rent_products">
		select rp.RP_ITEMNUM, rp.RP_ITEMNAME, rp.RP_PRICE,
		rp.RP_STARTDATE,rp.RP_img1,
		rp.RP_ENDDATE, gd.grade,
		gd.ROI_STAT,rp.rp_regdate, round((rp.RP_ENDDATE-sysdate),0) rp_stat
		from RENT_PRODUCTS
		rp,
		(select rp.RP_itemnum,recent.roi_stat,
		nvl(round(avg(rr.rr_grade),1),'0') grade from
		rent_review rr,
		RENT_PRODUCTS rp,
		(select roi.ROI_ITEMNUM, roi.roi_stat, ro.recent_date
		from
		rent_orders_items roi, (select max(roi_startdate) as recent_date,
		roi_itemnum from
		rent_orders_items group by ROI_ITEMNUM) ro
		where
		roi.ROI_STARTDATE = ro.recent_date and ro.roi_itemnum =
		roi.roi_itemnum) recent
		where rr.RR_ITEMNUM(+) =
		rp.RP_ITEMNUM and
		recent.roi_itemnum(+) =
		rp.RP_ITEMNUM
		group by 
		rp.RP_ITEMNUM,
		recent.roi_stat order by grade
		desc) gd
		where rp.RP_itemnum =
		gd.RP_itemnum
		<include refid="category"></include>
		<include refid="search"></include>
		order by
		<include refid="orderby"></include>
	</select>

	<sql id="category">
		<choose>
			<when test="maincate_value != 'all'">
				<if test="subcate_value == 'all'">
					and rp.RP_catemain = #{maincate_value}
				</if>
				<if test="subcate_value != 'all'">
					and rp.RP_catemain = #{maincate_value} and rp.RP_catesub
					=
					#{subcate_value}
				</if>
			</when>
			<otherwise></otherwise>
		</choose>
	</sql>

	<sql id="orderby">
		<choose>
			<when test="orderby == 'price_asc'">
				rp.RP_price asc, rp.rp_regdate desc
			</when>
			<when test="orderby == 'price_desc'">
				rp.RP_price desc, rp.RP_regdate desc
			</when>
			<when test="orderby == 'prod_popular'">
				gd.grade desc, rp.RP_REGDATE desc
			</when>
			<otherwise>rp.RP_REGDATE desc</otherwise>
		</choose>
	</sql>

	<sql id="search">
		<choose>
			<when test="keyword != 'all'">
				and (rp.RP_itemname like '%'||#{keyword}||'%'
				OR
				rp.RP_detail like '%'||#{keyword}||'%')
			</when>
			<otherwise></otherwise>
		</choose>
	</sql>

</mapper>

